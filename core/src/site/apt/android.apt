    ----
    Android
    ----

Android

    <<CRest>> with defaults parameters works out-of-the-box on Android.

    However if you need to do more fancy stuffs as uploading content or XML response auto-unmarshalling, there are some steps to follow.

* Upload

    Android SDK comes with Apache Http Client 4.x, so you can safely configure <<CRest>> to use its support for it, but must be aware that <<CRest>> is internally using org.apache.httpcomponents:httpmime to handle multipart requests.

    HttpMime is not part of the Android SDK and will need to be added in the classpath if any multipart request are needed, see {{{http://hc.apache.org/httpcomponents-client-ga/httpmime/index.html}Http Mime}}. An optional dependency has been added to the <<CRest>>'s pom and will need to be activated if needed.

* XML Marshalling

    You'll need to choose one of the strategies below if you wish to use a XML response format REST service, since the automarshalling feature offered by <<CRest>> relies today on JAXB which, as of today, is not included in the Android SDK.

    In order to deal with this situation, you can either

        * work with the raw response returned as an InputStream or Reader.

        * write a custom response handler to do the response marshalling on your side using the XML tools available on Android.

        * bundle a distribution of JAXB with your app to enable it.

* Notes

    For all the rest, as for JSON unmarshalling, you'll need to follow the same process as for non-android platform, thus look at the <<CRest>> pom and enable any needed optional dependencies.