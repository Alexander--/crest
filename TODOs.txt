CREST SITE
* Autogenerate sitemap.xml

CREST
* Add caching layer (?)
* Proper integration test of CRest
* Should AuthentificationManager be at the RestService level instead than implemented as an RequestInterceptor?
  Pros: - adds authentification informations just before firing request, no one can possibly modify it after
  Cons: - What about the possibility of authentifying some methods and some not?
* Finish JAX-RS integration
see http://download.oracle.com/javaee/6/api/javax/ws/rs/core/UriBuilder.html
* Proper testing for Deserializer per Method/MimeType
DONE * @Consume, @ConsumeJson, @ConsumeXml annotations ?
DONE @ConsumeJson(accept="application/json") accept would be optional and ends up in the Accept Header.
DONE ---> Deserializer per Method
DONE ---> remove builder.expects...
DONE ---> builder.consumesJson|Xml]() should have an optional default Accept Header value as well and specify. They should set the MethodConfig.DEFAULT_DESERIAIZER to XML or JSON etc... to default all methods to this
DONE ---> builder.deserializeXmlWithJaxb(...)
DONE ---> builder.deserializeXmlWithSimpleXml(...)
DONE ---> builder.deserializeMimeTypeWith(Deserializer)
DONE ---> builder.use[Json|Xml]DeserializerFor(String mime)

NEED TEST FOR
- @Path
- @Encoded
- @Consume
and everything else!




